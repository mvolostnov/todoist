<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="4" passed="3" failed="1" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2020-06-20T23:32:49 MSK" name="todoist" finished-at="2020-06-20T23:33:33 MSK" duration-ms="44408">
    <groups>
    </groups>
    <test started-at="2020-06-20T23:32:49 MSK" name="Task tests" finished-at="2020-06-20T23:33:33 MSK" duration-ms="44408">
      <class name="com.apitests.test.suites.task.CreateNewTaskTest">
        <test-method is-config="true" signature="browserSetup()[pri:0, instance:com.apitests.test.suites.task.CreateNewTaskTest@76f2bbc1]" started-at="2020-06-20T23:32:48 MSK" name="browserSetup" finished-at="2020-06-20T23:32:49 MSK" duration-ms="1028" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- browserSetup -->
        <test-method is-config="true" signature="beforeClass()[pri:0, instance:com.apitests.test.suites.task.CreateNewTaskTest@76f2bbc1]" started-at="2020-06-20T23:32:49 MSK" name="beforeClass" finished-at="2020-06-20T23:32:49 MSK" duration-ms="147" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method is-config="true" signature="beforeEachTest()[pri:0, instance:com.apitests.test.suites.task.CreateNewTaskTest@76f2bbc1]" started-at="2020-06-20T23:32:49 MSK" name="beforeEachTest" finished-at="2020-06-20T23:32:49 MSK" duration-ms="4" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeEachTest -->
        <test-method signature="addNewTaskAllFieldsTest()[pri:0, instance:com.apitests.test.suites.task.CreateNewTaskTest@76f2bbc1]" started-at="2020-06-20T23:32:49 MSK" name="addNewTaskAllFieldsTest" finished-at="2020-06-20T23:33:26 MSK" duration-ms="37243" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addNewTaskAllFieldsTest -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.apitests.test.suites.task.CreateNewTaskTest@76f2bbc1]" started-at="2020-06-20T23:33:26 MSK" name="afterMethod" finished-at="2020-06-20T23:33:27 MSK" duration-ms="936" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=addNewTaskAllFieldsTest status=SUCCESS method=CreateNewTaskTest.addNewTaskAllFieldsTest()[pri:0, instance:com.apitests.test.suites.task.CreateNewTaskTest@76f2bbc1] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeEachTest()[pri:0, instance:com.apitests.test.suites.task.CreateNewTaskTest@76f2bbc1]" started-at="2020-06-20T23:33:27 MSK" name="beforeEachTest" finished-at="2020-06-20T23:33:27 MSK" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeEachTest -->
        <test-method signature="addNewTaskEmptyMandatoryFieldsTest(com.apitests.test.data.entities.newtaskdata.TaskData)[pri:0, instance:com.apitests.test.suites.task.CreateNewTaskTest@76f2bbc1]" started-at="2020-06-20T23:33:27 MSK" name="addNewTaskEmptyMandatoryFieldsTest" data-provider="emptyTaskContent" finished-at="2020-06-20T23:33:30 MSK" duration-ms="2330" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[TaskData(commentCount=null, completed=false, content=null, due=null, id=null, order=null, priority=null, projectId=null, sectionId=null, parentId=null, url=null)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addNewTaskEmptyMandatoryFieldsTest -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.apitests.test.suites.task.CreateNewTaskTest@76f2bbc1]" started-at="2020-06-20T23:33:30 MSK" name="afterMethod" finished-at="2020-06-20T23:33:30 MSK" duration-ms="232" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=addNewTaskEmptyMandatoryFieldsTest status=SUCCESS method=CreateNewTaskTest.addNewTaskEmptyMandatoryFieldsTest(com.apitests.test.data.entities.newtaskdata.TaskData)[pri:0, instance:com.apitests.test.suites.task.CreateNewTaskTest@76f2bbc1] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeEachTest()[pri:0, instance:com.apitests.test.suites.task.CreateNewTaskTest@76f2bbc1]" started-at="2020-06-20T23:33:30 MSK" name="beforeEachTest" finished-at="2020-06-20T23:33:30 MSK" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeEachTest -->
        <test-method signature="addNewTaskEmptyMandatoryFieldsTest(com.apitests.test.data.entities.newtaskdata.TaskData)[pri:0, instance:com.apitests.test.suites.task.CreateNewTaskTest@76f2bbc1]" started-at="2020-06-20T23:33:30 MSK" name="addNewTaskEmptyMandatoryFieldsTest" data-provider="emptyTaskContent" finished-at="2020-06-20T23:33:32 MSK" duration-ms="2328" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[TaskData(commentCount=null, completed=false, content= , due=null, id=null, order=null, priority=null, projectId=null, sectionId=null, parentId=null, url=null)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addNewTaskEmptyMandatoryFieldsTest -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.apitests.test.suites.task.CreateNewTaskTest@76f2bbc1]" started-at="2020-06-20T23:33:32 MSK" name="afterMethod" finished-at="2020-06-20T23:33:33 MSK" duration-ms="260" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=addNewTaskEmptyMandatoryFieldsTest status=SUCCESS method=CreateNewTaskTest.addNewTaskEmptyMandatoryFieldsTest(com.apitests.test.data.entities.newtaskdata.TaskData)[pri:0, instance:com.apitests.test.suites.task.CreateNewTaskTest@76f2bbc1] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeEachTest()[pri:0, instance:com.apitests.test.suites.task.CreateNewTaskTest@76f2bbc1]" started-at="2020-06-20T23:33:33 MSK" name="beforeEachTest" finished-at="2020-06-20T23:33:33 MSK" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeEachTest -->
        <test-method signature="addNewTaskMandatoryFieldsTest()[pri:0, instance:com.apitests.test.suites.task.CreateNewTaskTest@76f2bbc1]" started-at="2020-06-20T23:33:33 MSK" name="addNewTaskMandatoryFieldsTest" finished-at="2020-06-20T23:33:33 MSK" duration-ms="688" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[1 expectation failed.
Expected status code <200> but was <429>.
]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: 1 expectation failed.
Expected status code <200> but was <429>.

at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)
at org.codehaus.groovy.reflection.CachedConstructor.invoke(CachedConstructor.java:80)
at org.codehaus.groovy.reflection.CachedConstructor.doConstructorInvoke(CachedConstructor.java:74)
at org.codehaus.groovy.runtime.callsite.ConstructorSite$ConstructorSiteNoUnwrap.callConstructor(ConstructorSite.java:84)
at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCallConstructor(CallSiteArray.java:59)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:237)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:249)
at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure.validate(ResponseSpecificationImpl.groovy:493)
at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure$validate$1.call(Unknown Source)
at io.restassured.internal.ResponseSpecificationImpl.validateResponseIfRequired(ResponseSpecificationImpl.groovy:674)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.codehaus.groovy.runtime.callsite.PlainObjectMetaMethodSite.doInvoke(PlainObjectMetaMethodSite.java:43)
at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite$PogoCachedMethodSiteNoUnwrapNoCoerce.invoke(PogoMetaMethodSite.java:190)
at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite.callCurrent(PogoMetaMethodSite.java:58)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:168)
at io.restassured.internal.ResponseSpecificationImpl.statusCode(ResponseSpecificationImpl.groovy:126)
at io.restassured.specification.ResponseSpecification$statusCode$0.callCurrent(Unknown Source)
at io.restassured.internal.ResponseSpecificationImpl.statusCode(ResponseSpecificationImpl.groovy:134)
at io.restassured.internal.ValidatableResponseOptionsImpl.statusCode(ValidatableResponseOptionsImpl.java:89)
at io.restassured.internal.ValidatableResponseImpl.super$2$statusCode(ValidatableResponseImpl.groovy)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:101)
at groovy.lang.MetaMethod.doMethodInvoke(MetaMethod.java:323)
at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1217)
at org.codehaus.groovy.runtime.ScriptBytecodeAdapter.invokeMethodOnSuperN(ScriptBytecodeAdapter.java:144)
at io.restassured.internal.ValidatableResponseImpl.statusCode(ValidatableResponseImpl.groovy:142)
at io.restassured.internal.ValidatableResponseImpl.statusCode(ValidatableResponseImpl.groovy)
at com.apitests.webservices.todoist.TodoistAPI.registerNewUser(TodoistAPI.java:32)
at com.apitests.test.suites.task.CreateNewTaskTest.addNewTaskMandatoryFieldsTest(CreateNewTaskTest.java:24)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
at java.base/java.lang.Thread.run(Thread.java:834)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addNewTaskMandatoryFieldsTest -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.apitests.test.suites.task.CreateNewTaskTest@76f2bbc1]" started-at="2020-06-20T23:33:33 MSK" name="afterMethod" finished-at="2020-06-20T23:33:33 MSK" duration-ms="160" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=addNewTaskMandatoryFieldsTest status=FAILURE method=CreateNewTaskTest.addNewTaskMandatoryFieldsTest()[pri:0, instance:com.apitests.test.suites.task.CreateNewTaskTest@76f2bbc1] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- com.apitests.test.suites.task.CreateNewTaskTest -->
    </test> <!-- Task tests -->
  </suite> <!-- todoist -->
</testng-results>
